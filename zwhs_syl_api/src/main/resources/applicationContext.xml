<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-4.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd"
	default-lazy-init="true">

	<description>Spring公共配置 </description>

	<!-- 使用annotation 自动注册bean, 并保证@Required、@Autowired的属性被注入 -->
	<context:component-scan base-package="cn.org.citycloud.zwhs">
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" />
		<context:exclude-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice" />
	</context:component-scan>

	<!-- Jpa Entity Manager 配置 -->
	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!-- 设置hibernate方言 可以使用java类动态生成 -->
		<property name="jpaVendorAdapter" ref="hibernateJpaVendorAdapter" />
		<property name="packagesToScan" value="cn.org.citycloud.zwhs.syl" />
		<property name="jpaProperties">
			<props>
				<!-- 命名规则 My_NAME->MyName -->
				<prop key="hibernate.physical_naming_strategy">cn.org.citycloud.zwhs.syl.core.ImprovedNamingStrategy</prop>
				<!-- 配置hibernate的属性 如果使用log4jdbc这个就不起作用 -->
				<prop key="hibernate.show_sql">false</prop>
				<prop key="hibernate.format_sql">false</prop>
				<!-- <prop key="hibernate.hbm2ddl.auto">update</prop> -->
				
				<!-- 由于spring也使用了Ehcache, 保证双方都使用同一个缓存管理器 -->
				<prop key="hibernate.cache.region.factory_class">
				     org.hibernate.cache.ehcache.SingletonEhCacheRegionFactory
				</prop>
				
				<!--<prop key="hibernate.cache.region.factory_class">org.hibernate.cache.ehcache.EhCacheRegionFactory</prop> --> 
                <prop key="javax.persistence.sharedCache.mode">ENABLE_SELECTIVE</prop> 
                <prop key="hibernate.generate_statistics">true</prop>
                <prop key="hibernate.cache.use_second_level_cache">true</prop>
                <prop key="hibernate.cache.use_query_cache">true</prop>
			</props>
		</property>
	</bean>
	<bean  
        id="memcachedClientBuilder"  
        class="net.rubyeye.xmemcached.XMemcachedClientBuilder">  
        <!-- XMemcachedClientBuilder have two arguments.First is server list,and   
            second is weights array. -->  
        <constructor-arg>  
            <list>  
<!-- 	             	 <bean class="java.net.InetSocketAddress">   -->
<!-- 	                    <constructor-arg>   -->
<!-- 	                        <value>192.168.109.111</value>   -->
<!-- 	                    </constructor-arg>   -->
<!-- 	                    <constructor-arg>   -->
<!-- 	                        <value>11211</value>   -->
<!-- 	                    </constructor-arg>   -->
<!-- 	                 </bean> -->
                <bean class="java.net.InetSocketAddress">  
                    <constructor-arg>  
                        <value>123.206.84.109</value>  
                    </constructor-arg>  
                    <constructor-arg>  
                        <value>11211</value>  
                    </constructor-arg>  
                </bean>
<!--                 <bean class="java.net.InetSocketAddress">   -->
<!--                     <constructor-arg>   -->
<!--                         <value>10.0.60.5</value>   -->
<!--                     </constructor-arg>   -->
<!--                     <constructor-arg>   -->
<!--                         <value>11211</value>   -->
<!--                     </constructor-arg>   -->
<!--                 </bean> -->
            </list>  
        </constructor-arg>  
        <constructor-arg>  
            <list>  
                <value>1</value>  
            </list>  
        </constructor-arg>  
        <property name="connectionPoolSize" value="10"></property>
        <property name="commandFactory">  
            <bean class="net.rubyeye.xmemcached.command.TextCommandFactory" />  
        </property>  
        <property name="sessionLocator">  
            <bean class="net.rubyeye.xmemcached.impl.KetamaMemcachedSessionLocator" />  
        </property>  
        <property name="transcoder">  
            <bean class="net.rubyeye.xmemcached.transcoders.SerializingTranscoder" />  
        </property>  
    </bean>  
    <!-- Use factory bean to build memcached client -->  
    <bean  
        id="memcachedClient"  
        factory-bean="memcachedClientBuilder"  
        factory-method="build"  
        destroy-method="shutdown" />  
        
	<!-- <bean id="hibernateJpaVendorAdapter" class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
	    <property name="databasePlatform" value="org.hibernate.dialect.MySQL5InnoDBDialect"/>
	</bean> -->
	<bean id="hibernateJpaVendorAdapter" class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
		<property name="databasePlatform">
			<bean factory-method="getDialect" class="cn.org.citycloud.zwhs.syl.utils.Hibernates">
				<constructor-arg ref="dataSource"/>
			</bean>
		</property>
	</bean>

	<!-- 使用配置文件加载数据库配置 -->
	<context:property-placeholder
		ignore-unresolvable="true" location="classpath*:/application.properties" />
	<!-- 数据源配置, 使用Tomcat JDBC连接池 -->
	<bean id="dataSource" class="org.apache.tomcat.jdbc.pool.DataSource"
		destroy-method="close">
		<!-- Connection Info -->
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />

		<!-- Connection Pooling Info -->
		<property name="maxActive" value="${jdbc.pool.maxActive}" />
		<property name="maxIdle" value="${jdbc.pool.maxIdle}" />
		<property name="minIdle" value="${jdbc.pool.minIdle}" />
		<property name="initialSize" value="${jdbc.pool.initialSize}" />
		<property name="defaultAutoCommit" value="false" />
		<property name="validationQuery" value="select 1"/>
		<property name="testWhileIdle"	value="true"/>
		<property name="timeBetweenEvictionRunsMillis" value="3600000"/>
		<property name="minEvictableIdleTimeMillis" value="18000000"/>
		
	</bean>
	
	<!-- JSR303 Validator定义 -->
 	<bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean" />
 	
 	<!-- Spring Data Jpa配置 -->
 	<jpa:repositories base-package="cn.org.citycloud.zwhs.syl"  transaction-manager-ref="transactionManager" entity-manager-factory-ref="entityManagerFactory"/>
 	
 	<!-- Jpa 事务配置 -->
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory"/>
	</bean>

	<!-- 使用annotation定义事务 -->
	<tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true" />
</beans>